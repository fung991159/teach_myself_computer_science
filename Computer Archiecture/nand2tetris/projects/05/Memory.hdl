// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    // where to assign the load by using
    // 000000000000000  -- 0 (RAM16K starts)
    // 011111111111111  -- 16383 (RAM16K ends)
    // 100000000000000 -- 16384 (Screen begin)
    // 110000000000000 -- 24576 (Keyboard)

    // if first two digit of address is 01 or 00, then load RAM16
    // elif it is 10, then load Screen
    // else don'the load anything

    DMux4Way(in=load, sel=address[13..14], a=ramload1, b=ramload2,c=screenLoad);
    Or(a=ramload1,b=ramload2,out=ramLoad);

    // Put your code here:
    // RAM16K, address[14]
    RAM16K(in=in, address=address[0..13], load=ramLoad, out=RAM16KOut);

    //Screen, address[13]
    Screen(in=in, address=address[0..12], load=screenLoad, out=screenOut);

    //Keyboard
    Keyboard(out=keyboardOut);

    // select the correct output base on address
    Mux4Way16(a=RAM16KOut, b=RAM16KOut,c=screenOut,d=keyboardOut,sel=address[13..14],out=out);

}

