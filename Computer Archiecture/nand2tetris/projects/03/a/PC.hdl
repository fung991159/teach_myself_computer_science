// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

//001 reset             Mux8Way16(b)
//010 load              Mux8Way16(c)
//100 inc               Mux8Way16(e)


// sel: reset | load | inc
//       sel[0], sel[1], sel[0]
// reset = 001 (b)
// load = 010 (c)
// inc = 100 (e)


CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Inc16(in=regOut, out=incOut);

    // selection bit can only contains
    // one selection, in order reset > load > inc

    Mux16(a=regOut, b=incOut,sel=inc,out=muxOutInc);
    Mux16(a=muxOutInc,b=in,sel=load,out=muxOutLoad);
    Mux16(a=muxOutLoad,b=false, sel=reset, out=muxOutReset);

    Register(in=muxOutReset, load=true, out=out, out=regOut);
}
