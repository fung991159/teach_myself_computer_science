In Chapter 3, we will look at listings generated by a disassembler, a program
that converts an executable program file back to a more readable ASCII form.
These files contain many hexadecimal numbers, typically representing values in two’s-
complement form. Being able to recognize these numbers and understand their
significance (for example, whether they are negative or positive) is an important
skill.
For the lines labeled A–I (on the right) in the following listing, convert the
hexadecimal values (in 32-bit two’s-complement form) shown to the right of the
instruction names (sub, mov, and add) into their decimal equivalents:

>> basically one must first convert hexadecimal number into binary to see the
leading sign digit for Two complement format, whether the value is negative

$0x2e0,%rsp = 0010 1110 0000 = 2^9 + 2^7 + 2^6 + 2^5 = 736
-0x58       = 0101 1000 =   2^6 + 2^4 + 2^3 = -88
0x28       = 0010 1000 =   2^5 + 2^3 = 40
-0x30       = 0011 0000 =   2^5 + 2^4 =  -48
0x78       = 0111 1000 =   8 + 16 + 32 + 64 = 120
0x88       = 1000 1000 =   128 + 8 = 136
0x1f8      = 0001 1111 1000 = 256 + 128 + 64 + 32 + 16 + 8  = 504
0xc0       = 1100 0000 = 128 + 64 = 192
-0x48       = 0100 1000 = 64 + 8 = -72